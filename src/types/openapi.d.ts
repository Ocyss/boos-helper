/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/config": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Config */
        get: operations["config_config_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 密钥信息 */
        get: operations["key_info_v1_key_info_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/query_order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 查询订单 */
        post: operations["query_order_v1_key_query_order_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/purchase_key": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 密钥购买 */
        post: operations["purchase_key_v1_key_purchase_key_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/purchase_account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 账号位购买 */
        post: operations["purchase_account_v1_key_purchase_account_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/bind_account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 账号位绑定 */
        post: operations["bind_account_v1_key_bind_account_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/recharge_key": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** 密钥充值 */
        post: operations["recharge_key_v1_key_recharge_key_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/remark": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 修改备注 */
        put: operations["update_remark_v1_key_remark_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/resume": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 获取简历 */
        get: operations["get_resume_v1_key_resume_get"];
        put?: never;
        /** 更新简历 */
        post: operations["update_resume_v1_key_resume_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/key/contact": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 联系开发者 */
        get: operations["contact_developer_v1_key_contact_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/llm/model_list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Model List */
        get: operations["model_list_v1_llm_model_list_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/llm/chat/completions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Chat Completions */
        post: operations["chat_completions_v1_llm_chat_completions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/llm/invoke/greetings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Invoke Greetings */
        post: operations["invoke_greetings_v1_llm_invoke_greetings_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/llm/invoke/filter": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Invoke Filter */
        post: operations["invoke_filter_v1_llm_invoke_filter_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pay/lantu/notify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Notify */
        post: operations["notify_pay_lantu_notify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pay/lantu/refund_notify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refund Notify */
        post: operations["refund_notify_pay_lantu_refund_notify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Body_bind_account_v1_key_bind_account_post */
        Body_bind_account_v1_key_bind_account_post: {
            /** Signed Key */
            signed_key: string;
            /** Callback */
            callback?: string | null;
            data: components["schemas"]["UserCreate"];
        };
        /** Body_chat_completions_v1_llm_chat_completions_post */
        Body_chat_completions_v1_llm_chat_completions_post: {
            /** Model */
            model: string;
            /** Messages */
            messages: Record<string, never>[];
            /**
             * Json Mode
             * @default false
             */
            json_mode: boolean;
            /**
             * Test Mode
             * @default false
             */
            test_mode: boolean;
        };
        /** Body_purchase_key_v1_key_purchase_key_post */
        Body_purchase_key_v1_key_purchase_key_post: {
            /** Callback */
            callback?: string | null;
            data: components["schemas"]["UserCreate"];
        };
        /** Body_query_order_v1_key_query_order_post */
        Body_query_order_v1_key_query_order_post: {
            /** Order Id */
            order_id: string;
        };
        /** Body_recharge_key_v1_key_recharge_key_post */
        Body_recharge_key_v1_key_recharge_key_post: {
            /** Amount */
            amount: number;
        };
        /** Body_update_remark_v1_key_remark_put */
        Body_update_remark_v1_key_remark_put: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Remark */
            remark: string;
        };
        /** Body_update_resume_v1_key_resume_post */
        Body_update_resume_v1_key_resume_post: {
            /** Code */
            code: string;
            /** Data */
            data?: Record<string, never> | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InvokeReqs */
        InvokeReqs: {
            /** Model */
            model?: string | null;
            /**
             * Test Mode
             * @default false
             */
            test_mode: boolean;
            jd: components["schemas"]["InvokeReqsJD"];
            /** User Request */
            user_request: string;
        };
        /** InvokeReqsJD */
        InvokeReqsJD: {
            /** Data */
            data: Record<string, never>;
            /** Boss */
            boss?: Record<string, never> | null;
            /** Card */
            card: Record<string, never>;
        };
        /** Key */
        Key: {
            /**
             * Created At
             * Format: date-time
             */
            created_at?: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at?: string;
            /** Signed Key */
            signed_key: string;
            /**
             * Balance
             * @default 0
             */
            balance: string;
            /**
             * User Capacity
             * @default 1
             */
            user_capacity: number;
        };
        /** KeyInfo */
        KeyInfo: {
            key: components["schemas"]["Key"];
            /** Users */
            users: components["schemas"]["UserPublic"][];
        };
        /** LLMResponse */
        LLMResponse: {
            /** Content */
            content: string;
            /** Reasoning Content */
            reasoning_content?: string | null;
            token_usage: components["schemas"]["TokenUsage"];
            /** Balance */
            balance?: string | null;
            /** Thread Id */
            thread_id?: string | null;
        };
        /** LtzfWxPayNotifyReqs */
        LtzfWxPayNotifyReqs: {
            /** Code */
            code: number;
            /** Timestamp */
            timestamp: number;
            /** Mch Id */
            mch_id: string;
            /** Order No */
            order_no: string;
            /** Out Trade No */
            out_trade_no: string;
            /** Pay No */
            pay_no: string;
            /** Total Fee */
            total_fee: number;
            /** Sign */
            sign: string;
            /** Pay Channel */
            pay_channel: string | null;
            /** Trade Type */
            trade_type: string | null;
            /** Success Time */
            success_time: string | null;
            /** Attach */
            attach: string | null;
            /** Openid */
            openid: string | null;
        };
        /** LtzfWxRefundNotifyReqs */
        LtzfWxRefundNotifyReqs: {
            /** Code */
            code: number;
            /** Timestamp */
            timestamp: number;
            /** Mch Id */
            mch_id: string;
            /** Order No */
            order_no: string;
            /** Out Trade No */
            out_trade_no: string;
            /** Pay No */
            pay_no: string;
            /** Refund No */
            refund_no: string;
            /** Out Refund No */
            out_refund_no: string;
            /** Pay Channel */
            pay_channel: string;
            /** Refund Fee */
            refund_fee: number;
            /** Sign */
            sign: string;
            /** Success Time */
            success_time: string | null;
        };
        /** OrderResp */
        OrderResp: {
            /** Msg */
            msg?: string | null;
            /** Errmsg */
            errmsg?: string | null;
            key?: components["schemas"]["Key"] | null;
            user?: components["schemas"]["UserPublic"] | null;
            order?: components["schemas"]["OrderResponse"] | null;
            status?: components["schemas"]["OrderStatus"] | null;
        };
        /** OrderResponse */
        OrderResponse: {
            /** Qr Code Url */
            qr_code_url: string;
            /** Order Id */
            order_id: string;
            /**
             * Expire Time
             * Format: date-time
             */
            expire_time: string;
            status: components["schemas"]["OrderStatus"];
        };
        /**
         * OrderStatus
         * @enum {string}
         */
        OrderStatus: "unpaid" | "paid" | "closed" | "refunded";
        /** ResumePublic */
        ResumePublic: {
            /**
             * Created At
             * Format: date-time
             */
            created_at?: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at?: string;
            /** Hash Code */
            hash_code: string;
        };
        /** TokenUsage */
        TokenUsage: {
            /** Input Tokens */
            input_tokens: number;
            /** Output Tokens */
            output_tokens: number;
            /** Total Tokens */
            total_tokens: number;
        };
        /** UserCreate */
        UserCreate: {
            /** User Id */
            user_id: string;
            /** Backup User Id */
            backup_user_id?: string | null;
            /** Remark */
            remark?: string | null;
        };
        /** UserPublic */
        UserPublic: {
            /**
             * Id
             * Format: uuid
             */
            id: string;
            /** Signed Key */
            signed_key: string;
            /** User Id */
            user_id: string;
            /** Remark */
            remark: string | null;
            /** Is Paid */
            is_paid: boolean;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    config_config_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    key_info_v1_key_info_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["KeyInfo"];
                };
            };
        };
    };
    query_order_v1_key_query_order_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_query_order_v1_key_query_order_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderResp"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    purchase_key_v1_key_purchase_key_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_purchase_key_v1_key_purchase_key_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/event-stream": components["schemas"]["OrderResp"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    purchase_account_v1_key_purchase_account_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/event-stream": components["schemas"]["OrderResp"];
                };
            };
        };
    };
    bind_account_v1_key_bind_account_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_bind_account_v1_key_bind_account_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPublic"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    recharge_key_v1_key_recharge_key_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_recharge_key_v1_key_recharge_key_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/event-stream": components["schemas"]["OrderResp"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_remark_v1_key_remark_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_update_remark_v1_key_remark_put"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_resume_v1_key_resume_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResumePublic"];
                };
            };
        };
    };
    update_resume_v1_key_resume_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_update_resume_v1_key_resume_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    contact_developer_v1_key_contact_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    model_list_v1_llm_model_list_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    chat_completions_v1_llm_chat_completions_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_chat_completions_v1_llm_chat_completions_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LLMResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    invoke_greetings_v1_llm_invoke_greetings_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvokeReqs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LLMResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    invoke_filter_v1_llm_invoke_filter_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvokeReqs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LLMResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    notify_pay_lantu_notify_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["LtzfWxPayNotifyReqs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refund_notify_pay_lantu_refund_notify_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["LtzfWxRefundNotifyReqs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
